% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mar_model.R
\name{mar_model}
\alias{mar_model}
\title{Specify parameters for a Mixture Autoregressive model}
\usage{
mar_model(ar = NULL, sigmas = NULL, weights = NULL, frequency = 1)
}
\arguments{
\item{ar}{A (p+1) x k numeric matrix containing the AR parameters
(\eqn{\phi_{0,i}, \phi_{1,i},\dots,\phi_{p,i}}), \eqn{i=1,\dots,k} for each component.}

\item{sigmas}{A numeric vector of length k or a list of k GARCH specifications.
If it is a vector, it is assumed \eqn{\sigma_{i,t} = \sigma_i} and
\code{sigmas} = \eqn{\sigma_1,\dots,\sigma_k}.
If it is a list, each element should be the output from \code{fGarch::\link[fGarch]{garchSpec}()}.}

\item{weights}{A numeric vector of length k containing the probability of
each of the component processes, \eqn{\alpha_1,\dots,\alpha_k}.}

\item{frequency}{The number of seasonal periods (e.g., 12 for monthly data).}
}
\value{
A `mar` object containing a list of \code{k}, \code{p}, \code{ar},
\code{sigmas} and \code{weights}.
}
\description{
This function allows the parameters of a mixture of k Gaussian AR processes
to be specified. The output is used in \code{\link{simulate.mar}()}.
The model is of the form
\deqn{y_t = \phi_{0,i} + \phi_{1,i}y_{t-1} + \cdots + \phi_{p,i}y_{t-p} + \sigma_{i,t}\epsilon_t}
with probability \eqn{\alpha_i}, where \eqn{\epsilon_t} is a N(0,1) variate.
If any argument is \code{NULL}, the corresponding parameters are randomly selected. 
The AR parameters may be non-stationary. When randomly selected, they are chosen
to be the pi weights of an ARIMA(p,d,0)(P,D,0) process where p is in \{0,1,2,3\},
d is in \{0,1,2\}, P is in \{0,1,2\} and D is in \{0,1\}. The model orders and the
parameters are uniformly sampled. The sigmas are uniformly sampled on (1,5)
and the weights are uniformly sampled on (0,1). The number of components is
uniformly sampled on \{1,2,3,4,5\}.
}
\examples{
n <- 100
# Seasonal MAR model with randomly selected parameters
mar_model(frequency = 4)
# MAR model with constant variances
# containing an AR(1) component and an AR(2) component
ar <- cbind(c(0, 0.8, 0), c(0, 0.6, 0.3))
weights <- c(0.8, 0.2)
model1 <- mar_model(ar = ar, sigmas = c(1, 2), weights = weights)

# MAR model with heteroskedastic errors
sigmas.spec <- list(
  fGarch::garchSpec(model = list(alpha = c(0.05, 0.06))),
  fGarch::garchSpec(model = list(alpha = c(0.05, 0.05)))
)
model2 <- mar_model(ar = ar, sigmas = sigmas.spec, weights = weights)
}
\seealso{
\code{\link{generate_mar}}
}
\author{
Rob J Hyndman
}
